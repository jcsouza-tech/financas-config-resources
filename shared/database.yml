# Configurações Compartilhadas de Banco de Dados
# Estas configurações são aplicadas a todos os microserviços que usam banco de dados

spring:
  # Configurações comuns do DataSource
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    hikari:
      # Pool de conexões
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      
      # Configurações de transação
      auto-commit: false
      connection-test-query: SELECT 1
      validation-timeout: 5000
      
      # Configurações de performance
      leak-detection-threshold: 60000
      register-mbeans: true
      
      # Configurações específicas do MySQL
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false

  # Configurações JPA comuns
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    
    # Configurações de transação
    properties:
      hibernate:
        transaction:
          jta:
            platform: enable
        # Configurações de transação
        connection:
          "[provider_disables_autocommit]": true
        jdbc:
          "[batch_size]": 20
          "[batch_versioned_data]": true
        "[order_inserts]": true
        "[order_updates]": true
        # Configurações de cache
        cache:
          "[use_second_level_cache]": false
          "[use_query_cache]": false

  # Configurações de transação
  transaction:
    rollback-on-commit-failure: true
    default-timeout: 30

# Configurações específicas por ambiente
---
spring:
  profiles: dev
  datasource:
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          "[batch_size]": 10
        format_sql: true

---
spring:
  profiles: prod
  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc:
          "[batch_size]": 50

---
spring:
  profiles: hml
  datasource:
    hikari:
      maximum-pool-size: 30
      minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc:
          "[batch_size]": 30
